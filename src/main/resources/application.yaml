spring:
  application:
    name: product-cache-service
  profiles:
    active: localhost
  main:
    allow-bean-definition-overriding: true
info:
  component: Product Cache Service

logging: ##Uygulamadaki logları takip edebilmek için eklenen conf.
  level:
    ##root: debug
    ##root: off
      com.microshop: debug
    ##üstteki şekilde diyerek daha az ve daha az karışık log görebiliriz.
server:
  port: 4044

---

spring:
  config:
    activate:
      on-profile: localhost
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
#Bilgisayara yüklemeden docker da redisi aya kaldırmak için: redis.yml dosyasının bulunduğu klasörde cmd yi açıyoruz ve aşağıdaki komutu çalıştırıyoruz:
#docker-compose --compatibility -p stock-management -f redis.yml up

#REDIS verileri izleme komutları
#docker ps
#docker exec -it {CONTAINER_ID} redis-cli
#keys*
#smembers {KEY}



# hash için hgetall Product:1 şeklinde değerleri öğrenebiliriz.
feign:
  product-service:
    name: product-service
    url: http://localhost:4041

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
  client:
    service-url:
      defaultZone: http://localhost:4042/eureka/


---
spring:
  config:
    activate:
      on-profile: stage
  cache:
    type: redis
  data:
    redis:
      host: redis
      port: 6379

feign:
  product-service:
    name: product-service
    url: http://zuul-edge-server:4041


eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:4042/eureka
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
